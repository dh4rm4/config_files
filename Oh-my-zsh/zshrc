# Path to your oh-my-zsh installation.
export ZSH=~/.oh-my-zsh

ZSH_THEME="odin"

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(git)

source $ZSH/oh-my-zsh.sh

# Manually set language environment
export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
if [[ -n $SSH_CONNECTION ]]; then
	export EDITOR='emacs -nw'
else
   export EDITOR='emacs -nw'
fi

##################
# Authentification
# ssh
export SSH_KEY_PATH="~/.ssh/rsa_id"

# GPG2
export GPG_TTY=$(tty)
export KEYID=0x6DB85EE72825E178
alias gpg="gpg2"

## gpg-agent config
alias start_gpg_agent="pkill gpg-agent && gpg-agent --daemon
                       SSH_AUTH_SOCK=/home/dh4rm4/.gnupg/S.gpg-agent.ssh; export SSH_AUTH_SOCK;"
# Launch gpg-agent
gpg-connect-agent /bye
# When using SSH support, use the current TTY for passphrase prompts
gpg-connect-agent updatestartuptty /bye > /dev/null
# Point the SSH_AUTH_SOCK to the one handled by gpg-agent
if [ -S $(gpgconf --list-dirs agent-ssh-socket) ]; then
	export SSH_AUTH_SOCK=$(gpgconf --list-dirs agent-ssh-socket)
else
	echo "$(gpgconf --list-dirs agent-ssh-socket) doesn't exist. Is gpg-agent running ?"
fi


######
# Dev
alias e="emacs -nw"
alias emacs="emacs -nw"
alias py="python"
alias py3="python3"


#########
# System
alias rM="rm -r"
alias zsrc="source ~/.zshrc"
alias esrc="emacs ~/.zshrc"

alias update="sudo apt-get update"
alias upgrade="update && sudo apt-get upgrade"
alias sleep_well="sudo shutdown now"

alias blink="redshift -x"
alias xopen="xdg-open"

alias xclipc="xclip -selection c"
alias xclipoc="xclip -out -selection c"

###########
# Virtualenv
export WORKON_HOME=$HOME/.virtualenvs
export VIRTUALENVWRAPPER_PYTHON=/usr/bin/python3
source /usr/share/virtualenvwrapper/virtualenvwrapper.sh

alias goKrakeno="cd /home/dh4rm4/.virtualenvs/krakeno/greeny"

##########
# Clean code
function check_code {
	pep8 --ignore=E501 $1;
	if [[ $? -eq 0 ]]; then
		echo '[+] Pep8 is good'
		pyflakes $1;
		if [[ $? -eq 0 ]]; then
			echo '[+] Pyflakes is good'
			pylint --disable=C0103,C0111,R0201,E1120 $1;
		fi
	fi
}
